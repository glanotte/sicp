(define (make-queue)
  (let ((front-ptr '())
        (rear-ptr '()))
    (define (empty-queue?) (null? front-ptr))
    (define (set-front-ptr! item) (set! front-ptr item))
    (define (set-rear-ptr! item) (set! rear-ptr item))
    (define (insert-queue! item)
      (let ((new-pair (cons item '())))
        (cond ((empty-queue?)
               (set-front-ptr! new-pair)
               (set-rear-ptr! new-pair)
               dispatch)
              (else
                (set-cdr! rear-ptr new-pair)
                (set-rear-ptr! new-pair)
                dispatch))))
    (define (delete-queue!)
      (cond ((empty-queue?)
             (error "FRONT called with an empty queue" queue))
            (else (set-front-ptr! (cdr front-ptr))
                  dispatch)))
    (define (dispatch m)
      (cond ((eq? m 'insert) insert-queue!)
            ((eq? m 'print) front-ptr)
            ((eq? m 'delete) (delete-queue!))
            (else (error "unknown action for make-queue" m))))
    dispatch))
